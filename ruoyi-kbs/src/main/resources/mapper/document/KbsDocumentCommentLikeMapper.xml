<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.kbs.mapper.KbsDocumentCommentLikeMapper">
    
    <resultMap type="KbsDocumentCommentLike" id="KbsDocumentCommentLikeResult">
        <result property="id"    column="id"    />
        <result property="commentId"    column="comment_id"    />
        <result property="createId"    column="create_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateId"    column="update_id"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectKbsDocumentCommentLikeVo">
        select id, comment_id, create_id, create_time, update_id, update_time from t_kbs_document_comment_like
    </sql>

    <select id="selectKbsDocumentCommentLikeList" parameterType="KbsDocumentCommentLike" resultMap="KbsDocumentCommentLikeResult">
        <include refid="selectKbsDocumentCommentLikeVo"/>
        <where>  
            <if test="commentId != null  and commentId != ''"> and comment_id = #{commentId}</if>
            <if test="createId != null "> and create_id = #{createId}</if>
        </where>
    </select>
    
    <select id="selectKbsDocumentCommentLikeById" parameterType="String" resultMap="KbsDocumentCommentLikeResult">
        <include refid="selectKbsDocumentCommentLikeVo"/>
        where id = #{id}
    </select>

    <insert id="insertKbsDocumentCommentLike" parameterType="KbsDocumentCommentLike">
        insert into t_kbs_document_comment_like
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">id,</if>
            <if test="commentId != null and commentId != ''">comment_id,</if>
            <if test="createId != null">create_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateId != null">update_id,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">#{id},</if>
            <if test="commentId != null and commentId != ''">#{commentId},</if>
            <if test="createId != null">#{createId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateId != null">#{updateId},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateKbsDocumentCommentLike" parameterType="KbsDocumentCommentLike">
        update t_kbs_document_comment_like
        <trim prefix="SET" suffixOverrides=",">
            <if test="commentId != null and commentId != ''">comment_id = #{commentId},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateId != null">update_id = #{updateId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteKbsDocumentCommentLikeById" parameterType="String">
        delete from t_kbs_document_comment_like where id = #{id}
    </delete>

    <delete id="deleteKbsDocumentCommentLikeByIds" parameterType="String">
        delete from t_kbs_document_comment_like where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectKbsDocumentCommentLikeByCommentIds" parameterType="String" resultMap="KbsDocumentCommentLikeResult">
        <include refid="selectKbsDocumentCommentLikeVo"/>
        where comment_id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <delete id="deleteKbsDocumentCommentLikeByComment" parameterType="KbsDocumentCommentLikeQo">
        delete from t_kbs_document_comment_like
        where comment_id = #{commentId} and create_id = #{userId}
    </delete>
</mapper>